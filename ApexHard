local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Workspace = game:GetService("Workspace")

local Window = Fluent:CreateWindow({
    Title = "XXMZ",
    SubTitle = "EB Apex Hard",
    TabWidth = 160,
    Size = UDim2.fromOffset(600, 400),
    Acrylic = true,
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.RightControl
})

local MainTab = Window:AddTab({ Title = "Main", Icon = "home" })

local AntiArrestEnabled = false
local AntiArrestToggle = MainTab:AddToggle("AntiArrestToggle", {
    Title = "Anti Arrest",
    Default = false
})
AntiArrestToggle:OnChanged(function(state)
    AntiArrestEnabled = state
end)

task.spawn(function()
    while true do
        if AntiArrestEnabled then
            for _, player in pairs(Players:GetPlayers()) do
                local arrestObj = player:FindFirstChild("Arrested Function")
                if arrestObj then
                    arrestObj:Destroy()
                    print("[Anti Arrest] Arrested Function removida de " .. player.Name)
                end
                if player.Backpack then
                    local backpackArrest = player.Backpack:FindFirstChild("Arrested Function")
                    if backpackArrest then
                        backpackArrest:Destroy()
                        print("[Anti Arrest] Arrested Function removida do Backpack de " .. player.Name)
                    end
                end
                if player.Character then
                    local charArrest = player.Character:FindFirstChild("Arrested Function")
                    if charArrest then
                        charArrest:Destroy()
                        print("[Anti Arrest] Arrested Function removida do Character de " .. player.Name)
                    end
                end
            end
            local workspaceArrest = Workspace:FindFirstChild("Arrested Function")
            if workspaceArrest then
                workspaceArrest:Destroy()
                print("[Anti Arrest] Arrested Function removida do Workspace")
            end
        end
        task.wait(0.5)
    end
end)

-- Invadir Base com Cooperação Toggle
local InvadirBaseEnabled = false

local InvadirBaseToggle = MainTab:AddToggle("InvadirBaseToggle", {
    Title = "Invadir Base com Cooperação",
    Description = "ATENÇÃO: Você deve estar perto do Portão do VIP para funcionar!",
    Default = false
})

InvadirBaseToggle:OnChanged(function(state)
    InvadirBaseEnabled = state
    if state then
        print("[Invadir Base] Monitoramento ativado - fique perto do Portão do VIP!")
    else
        print("[Invadir Base] Monitoramento desativado")
    end
end)

-- Função para encontrar o Portão do VIP
local function findPortaoVIP()
    local mapaEB = Workspace:FindFirstChild("MAPA DA EB")
    if not mapaEB then
        return nil
    end
    
    -- Procurar em todas as pastas (incluindo com nomes invisíveis)
    for _, folder in pairs(mapaEB:GetChildren()) do
        if folder:IsA("Folder") or folder:IsA("Model") then
            local portao = folder:FindFirstChild("Portão do VIP")
            if portao then
                return portao
            end
        end
    end
    
    return nil
end

-- Loop para monitorar o Portão do VIP
task.spawn(function()
    local lastCanCollide = nil
    
    while true do
        if InvadirBaseEnabled and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
            local portao = findPortaoVIP()
            if portao then
                -- Verificar se é uma Part ou procurar Parts dentro do modelo
                local partToCheck = nil
                if portao:IsA("Part") then
                    partToCheck = portao
                else
                    -- Se for um modelo, procurar a primeira Part dentro dele
                    for _, child in pairs(portao:GetChildren()) do
                        if child:IsA("Part") then
                            partToCheck = child
                            break
                        end
                    end
                end
                
                if partToCheck then
                    local currentCanCollide = partToCheck.CanCollide
                    
                    -- Se mudou de true para false (perdeu colisão)
                    if lastCanCollide == true and currentCanCollide == false then
                        -- Teleportar imediatamente
                        LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(2086, 1, -131)
                        print("[Invadir Base] Portão sem colisão detectado! Teleportando...")
                        
                        Fluent:Notify({
                            Title = "Invadir Base",
                            Content = "Portão aberto! Invadindo base...",
                            Duration = 3
                        })
                    end
                    
                    lastCanCollide = currentCanCollide
                else
                    print("[Invadir Base] Part do Portão do VIP não encontrada")
                end
            else
                print("[Invadir Base] Portão do VIP não encontrado")
            end
        end
        task.wait(0.1) -- Verificar a cada 0.1s para ser responsivo
    end
end)
local AntiDetectorEnabled = false
local savedDetector = nil
local detectorParent = nil

local AntiDetectorToggle = MainTab:AddToggle("AntiDetectorToggle", {
    Title = "Anti Detector",
    Description = "Remove o Detecto e restaura quando desativado",
    Default = false
})

AntiDetectorToggle:OnChanged(function(state)
    AntiDetectorEnabled = state
    
    if state then
        -- Ativar Anti Detector
        local mapaEB = Workspace:FindFirstChild("MAPA DA EB")
        if mapaEB then
            local deleteClient = mapaEB:FindFirstChild("DeleteClient")
            if deleteClient then
                local detecto = deleteClient:FindFirstChild("Detecto")
                if detecto then
                    savedDetector = detecto:Clone()
                    detectorParent = deleteClient
                    detecto:Destroy()
                    print("[Anti Detector] Detecto removido!")
                else
                    print("[Anti Detector] Detecto não encontrado!")
                end
            else
                print("[Anti Detector] DeleteClient não encontrado!")
            end
        else
            print("[Anti Detector] MAPA DA EB não encontrado!")
        end
    else
        -- Desativar Anti Detector (restaurar)
        if savedDetector and detectorParent then
            local newDetector = savedDetector:Clone()
            newDetector.Parent = detectorParent
            print("[Anti Detector] Detecto restaurado!")
        end
        savedDetector = nil
        detectorParent = nil
    end
end)

MainTab:AddButton({
    Title = "Equipar Feijão",
    Description = "Equipa o feijão automaticamente",
    Callback = function()
        if not LocalPlayer.Character or not LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
            Fluent:Notify({
                Title = "Equipar Feijão",
                Content = "Erro: Personagem não encontrado",
                Duration = 3
            })
            return
        end
        
        -- Teleportar rapidamente
        LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(1649, 2, 627)
        
        -- Aguardar muito pouco e interagir
        task.wait(0.01)
        
        local botFolder = Workspace:FindFirstChild("Bot")
        if not botFolder then
            Fluent:Notify({
                Title = "Equipar Feijão",
                Content = "Erro: Pasta 'Bot' não encontrada",
                Duration = 3
            })
            return
        end
        
        local foundProximity = false
        
        -- Procurar em todos os modelos sem nome na pasta Bot
        for _, model in pairs(botFolder:GetChildren()) do
            if model:IsA("Model") and model.Name == "" then
                local head = model:FindFirstChild("Head")
                if head then
                    local botao = head:FindFirstChild("Botão")
                    if botao then
                        for _, part in pairs(botao:GetDescendants()) do
                            if part:IsA("ProximityPrompt") then
                                fireproximityprompt(part)
                                foundProximity = true
                                Fluent:Notify({
                                    Title = "Equipar Feijão",
                                    Content = "Feijão equipado!",
                                    Duration = 3
                                })
                                print("[Equipar Feijão] Feijão equipado rapidamente!")
                                return
                            end
                        end
                    end
                end
            end
        end
        
        if not foundProximity then
            Fluent:Notify({
                Title = "Equipar Feijão",
                Content = "Erro: ProximityPrompt não encontrado",
                Duration = 3
            })
        end
    end
})

MainTab:AddButton({
    Title = "Verificar Caminhões",
    Description = "Conta quantos caminhões existem no servidor",
    Callback = function()
        local veiculosFolder = Workspace:FindFirstChild("Veiculos")
        if not veiculosFolder then
            Fluent:Notify({
                Title = "Caminhões",
                Content = "Erro: Reporte para o dono",
                Duration = 5
            })
            return
        end
        local qt01Count = 0
        for _, veiculo in pairs(veiculosFolder:GetChildren()) do
            if veiculo.Name == "QT-01" then
                qt01Count = qt01Count + 1
            end
        end
        if qt01Count > 0 then
            Fluent:Notify({
                Title = "Caminhões Encontrados!",
                Content = "Foram encontrados " .. qt01Count .. " caminhões nesse servidor.",
                Duration = 5
            })
        else
            Fluent:Notify({
                Title = "Nenhum Caminhão",
                Content = "Não foram encontrados caminhões nesse servidor.",
                Duration = 5
            })
        end
        print("[Verificar Caminhões] Encontrados " .. qt01Count .. " caminhões")
    end
})

MainTab:AddButton({
    Title = "Invadir Base",
    Description = "Fique perto da base",
    Callback = function()
        if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
            LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(1824, 1, -308)
        end
    end
})

local TpToolEnabled = false
local toolEquipped = false
local tool = nil

local TpToolToggle = MainTab:AddToggle("TpToolToggle", {
    Title = "Tp Tool",
    Description = "Ativa/desativa a ferramenta de teleporte",
    Default = false
})

TpToolToggle:OnChanged(function(state)
    TpToolEnabled = state
    if TpToolEnabled then
        tool = Instance.new("Tool")
        tool.Name = "TpTool"
        tool.RequiresHandle = false
        tool.Parent = LocalPlayer.Backpack
        tool.Equipped:Connect(function()
            toolEquipped = true
        end)
        tool.Unequipped:Connect(function()
            toolEquipped = false
        end)
        print("[Tp Tool] Ferramenta criada! Equipe para usar.")
    else
        if tool then
            tool:Destroy()
            tool = nil
            toolEquipped = false
            print("[Tp Tool] Ferramenta removida.")
        end
    end
end)

local mouse = LocalPlayer:GetMouse()
mouse.Button1Down:Connect(function()
    if TpToolEnabled and toolEquipped then
        local targetPos = mouse.Hit.Position
        if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
            LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(targetPos + Vector3.new(0,3,0))
        end
    end
end)

local AimbotTab = Window:AddTab({ Title = "Aimbot", Icon = "crosshair" })

local AimbotEnabled = false
local AimbotSpeed = 0.5
local AimbotFOV = 100
local ShowFOV = false
local isHoldingRightMouse = false
local camera = Workspace.CurrentCamera

local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "FOVGui"
ScreenGui.Parent = game.CoreGui

local FOVFrame = Instance.new("Frame")
FOVFrame.Name = "FOVFrame"
FOVFrame.Size = UDim2.new(0, 200, 0, 200)
FOVFrame.Position = UDim2.new(0.5, -100, 0.5, -100)
FOVFrame.BackgroundTransparency = 1
FOVFrame.Parent = ScreenGui

local FOVCircle = Instance.new("TextLabel")
FOVCircle.Name = "FOVCircle"
FOVCircle.Size = UDim2.new(1, 0, 1, 0)
FOVCircle.Position = UDim2.new(0, 0, 0, 0)
FOVCircle.BackgroundTransparency = 1
FOVCircle.Text = "O"
FOVCircle.TextColor3 = Color3.fromRGB(255, 255, 255)
FOVCircle.TextScaled = true
FOVCircle.TextStrokeTransparency = 0
FOVCircle.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
FOVCircle.Font = Enum.Font.Code
FOVCircle.Visible = false
FOVCircle.Parent = FOVFrame

AimbotTab:AddToggle("ToggleAimbot", {
    Title = "Ativar Aimbot",
    Default = false,
}):OnChanged(function(state)
    AimbotEnabled = state
end)

AimbotTab:AddSlider("AimbotSpeed", {
    Title = "Velocidade do Aimbot",
    Default = 0.5,
    Min = 0.1,
    Max = 10,
    Rounding = 2,
}):OnChanged(function(value)
    AimbotSpeed = value
end)

AimbotTab:AddSlider("AimbotFOV", {
    Title = "FOV do Aimbot",
    Default = 100,
    Min = 50,
    Max = 500,
    Rounding = 0,
}):OnChanged(function(value)
    AimbotFOV = value
end)

AimbotTab:AddToggle("ShowFOV", {
    Title = "Mostrar FOV",
    Default = false,
}):OnChanged(function(state)
    ShowFOV = state
    FOVCircle.Visible = state
end)

UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if not gameProcessed and input.UserInputType == Enum.UserInputType.MouseButton2 then
        isHoldingRightMouse = true
    end
end)

UserInputService.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton2 then
        isHoldingRightMouse = false
    end
end)

local function GetClosestPlayerToCursor()
    local mouseLocation = UserInputService:GetMouseLocation()
    local closestPlayer = nil
    local shortestDistance = math.huge

    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") and player.Character:FindFirstChild("Head") and player.Character:FindFirstChild("Humanoid") and player.Character.Humanoid.Health > 0 then
            local headPos, onScreen = camera:WorldToViewportPoint(player.Character.Head.Position)
            if onScreen then
                local screenPos = Vector2.new(headPos.X, headPos.Y)
                local distance = (screenPos - Vector2.new(mouseLocation.X, mouseLocation.Y)).Magnitude
                if distance < AimbotFOV and distance < shortestDistance then
                    shortestDistance = distance
                    closestPlayer = player
                end
            end
        end
    end

    return closestPlayer
end

RunService.Heartbeat:Connect(function()
    if ShowFOV and AimbotEnabled then
        local mouseLocation = UserInputService:GetMouseLocation()
        local fovSize = AimbotFOV * 2
        FOVFrame.Size = UDim2.new(0, fovSize, 0, fovSize)
        FOVFrame.Position = UDim2.new(0, mouseLocation.X - fovSize/2, 0, mouseLocation.Y - fovSize/2)
        FOVCircle.Visible = true
    else
        FOVCircle.Visible = false
    end
end)

local aimbotConnection
aimbotConnection = RunService.Heartbeat:Connect(function()
    if AimbotEnabled and isHoldingRightMouse and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
        local target = GetClosestPlayerToCursor()
        if target and target.Character and target.Character:FindFirstChild("Head") then
            local targetPos = target.Character.Head.Position
            local currentCFrame = camera.CFrame
            local direction = (targetPos - currentCFrame.Position).Unit
            local newCFrame = CFrame.lookAt(currentCFrame.Position, targetPos)
            camera.CFrame = currentCFrame:Lerp(newCFrame, AimbotSpeed * 0.02)
        end
    end
end)

local CreditTab = Window:AddTab({ Title = "Credits", Icon = "notebook" })

CreditTab:AddButton({
    Title = "Discord Server",
    Description = "",
    Callback = function()
        setclipboard("https://discord.gg/3gWvqV8Frg")
        Fluent:Notify({
            Title = "Copiado!",
            Content = "Servidor do Discord colocado na Área de Transferência",
            SubContent = "Use Ctrl+V para colar.",
            Duration = 5
        })
    end
})

local OthersTab = Window:AddTab({ Title = "Others", Icon = "help-circle" })

OthersTab:AddButton({
    Title = "Auto JJ'S por ZV YZ",
    Description = "",
    Callback = function()
        loadstring(game:HttpGet('https://raw.githubusercontent.com/Zv-yz/AutoJJs/main/Main.lua'))()
    end
})

OthersTab:AddButton({
    Title = "Infinite Yield",
    Description = "",
    Callback = function()
        loadstring(game:HttpGet(('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'),true))()
    end
})

OthersTab:AddButton({
    Title = "Aimbot Air",
    Description = "",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/Exunys/AirHub/main/AirHub.lua"))()
    end
})

InterfaceManager:SetLibrary(Fluent)
SaveManager:SetLibrary(Fluent)

SaveManager:IgnoreThemeSettings()
SaveManager:SetIgnoreIndexes({ "AntiArrestToggle", "TpToolToggle", "AntiDetectorToggle", "InvadirBaseToggle" })

SaveManager:BuildConfigSection(Window)
InterfaceManager:BuildInterfaceSection(Window)
