-- Atualmente Open-Source!
-- Permitido: Adotar algumas funções em seu script , verificar se é seguro
-- Não permitido: Copiar o script totalmente , Recriar com KeySystem
-- Aproveite :)

local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "XXMZ HUB",
   LoadingTitle = "Carregando Script...",
   LoadingSubtitle = "XXMZ [FORSAKEN]",
   ConfigurationSaving = {
      Enabled = true,
      FolderName = "XXMZCONFIG",
      FileName = "Config"
   },
   Discord = {
      Enabled = false,
      Invite = "noinvitelink",
      RememberJoins = true
   },
   KeySystem = false
})

local MainTab = Window:CreateTab("Principal", 4483362458)
local AnimationTab = Window:CreateTab("Animation", 4483362458)

-- =============================
-- Show Chat Toggle
-- =============================
MainTab:CreateToggle({
    Name = "Show Chat",
    CurrentValue = false,
    Flag = "ShowChatToggle",
    Callback = function(value)
        _G.showChat = value
        if value then
            task.spawn(function()
                while _G.showChat and task.wait() do
                    pcall(function()
                        local textChatService = game:GetService("TextChatService")
                        local chatConfig = textChatService:FindFirstChildOfClass("ChatWindowConfiguration")
                        if chatConfig then
                            chatConfig.Enabled = true
                        end
                    end)
                end
            end)
            Rayfield:Notify({Title = "Show Chat", Content = "Chat sempre visível ATIVADO!", Duration = 3, Image = 4483362458})
        else
            _G.showChat = false
            pcall(function()
                -- Só desativa o chat se não estiver espectando
                local localPlayer = game.Players.LocalPlayer
                if workspace:FindFirstChild("Players") and workspace.Players:FindFirstChild("Spectating") then
                    if not workspace.Players.Spectating:FindFirstChild(localPlayer.Name) then
                        local textChatService = game:GetService("TextChatService")
                        local chatConfig = textChatService:FindFirstChildOfClass("ChatWindowConfiguration")
                        if chatConfig then
                            chatConfig.Enabled = false
                        end
                    end
                end
            end)
            Rayfield:Notify({Title = "Show Chat", Content = "Show Chat DESATIVADO!", Duration = 2, Image = 4483362458})
        end
    end
})

-- =============================
-- Bring Items
-- =============================
local bringItemsToggle = false
local bringItemsConnection = nil

local function startBringItems()
    local RunService = game:GetService("RunService")
    bringItemsConnection = RunService.Heartbeat:Connect(function()
        if bringItemsToggle then
            local player = game.Players.LocalPlayer
            local character = player.Character
            if character and character:FindFirstChild("HumanoidRootPart") then
                character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(-3549, 18, 254))
            end
            wait(0.05)
        end
    end)
end

local function stopBringItems()
    if bringItemsConnection then
        bringItemsConnection:Disconnect()
        bringItemsConnection = nil
    end
end

MainTab:CreateToggle({
   Name = "Bring Items",
   CurrentValue = false,
   Flag = "BringItemsToggle",
   Callback = function(Value)
       bringItemsToggle = Value
       if Value then
           startBringItems()
           Rayfield:Notify({Title = "Bring Items", Content = "Teleporte contínuo ATIVADO! (0.05s)", Duration = 3, Image = 4483362458})
       else
           stopBringItems()
           Rayfield:Notify({Title = "Bring Items", Content = "Teleporte contínuo DESATIVADO!", Duration = 2, Image = 4483362458})
       end
   end,
})

-- =============================
-- Kill Carl
-- =============================
local killCarlToggle = false
local killCarlConnection = nil

local function startKillCarl()
    local RunService = game:GetService("RunService")
    killCarlConnection = RunService.Heartbeat:Connect(function()
        if killCarlToggle then
            local player = game.Players.LocalPlayer
            local character = player.Character
            if character and character:FindFirstChild("HumanoidRootPart") then
                character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(-3610, 12, 255))
            end
            wait(0.05)
        end
    end)
end

local function stopKillCarl()
    if killCarlConnection then
        killCarlConnection:Disconnect()
        killCarlConnection = nil
    end
end

MainTab:CreateToggle({
   Name = "Kill Carl",
   CurrentValue = false,
   Flag = "KillCarlToggle",
   Callback = function(Value)
       killCarlToggle = Value
       if Value then
           startKillCarl()
           Rayfield:Notify({Title = "Kill Carl", Content = "Teleporte contínuo ATIVADO! (0.05s)", Duration = 3, Image = 4483362458})
       else
           stopKillCarl()
           Rayfield:Notify({Title = "Kill Carl", Content = "Teleporte contínuo DESATIVADO!", Duration = 2, Image = 4483362458})
       end
   end,
})

-- =============================
-- Kill Rager
-- =============================
local killRagerToggle = false
local killRagerConnection = nil

local function startKillRager()
    local RunService = game:GetService("RunService")
    killRagerConnection = RunService.Heartbeat:Connect(function()
        if killRagerToggle then
            local player = game.Players.LocalPlayer
            local character = player.Character
            if character and character:FindFirstChild("HumanoidRootPart") then
                character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(-3646, 12, 255))
            end
            wait(0.05)
        end
    end)
end

local function stopKillRager()
    if killRagerConnection then
        killRagerConnection:Disconnect()
        killRagerConnection = nil
    end
end

MainTab:CreateToggle({
   Name = "Kill Rager",
   CurrentValue = false,
   Flag = "KillRagerToggle",
   Callback = function(Value)
       killRagerToggle = Value
       if Value then
           startKillRager()
           Rayfield:Notify({Title = "Kill Rager", Content = "Teleporte contínuo ATIVADO! (0.05s)", Duration = 3, Image = 4483362458})
       else
           stopKillRager()
           Rayfield:Notify({Title = "Kill Rager", Content = "Teleporte contínuo DESATIVADO!", Duration = 2, Image = 4483362458})
       end
   end,
})

-- =============================
-- Generators ESP
-- =============================
MainTab:CreateToggle({
   Name = "Generators ESP",
   CurrentValue = false,
   Flag = "GeneratorsESP",
   Callback = function(bool)
       _G.generators = bool
       task.spawn(function()
           while task.wait() do
               if _G.generators then
                   pcall(function()
                       if workspace:FindFirstChild("Map") then
                           local gameMap = workspace.Map
                           if gameMap:FindFirstChild("Ingame") and gameMap.Ingame:FindFirstChild("Map") then
                               for _, v in pairs(gameMap.Ingame.Map:GetChildren()) do
                                   if v.Name == "Generator" and not v:FindFirstChild("gen_esp") then
                                       local hl = Instance.new("Highlight", v)
                                       hl.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
                                       hl.Name = "gen_esp"
                                       hl.FillColor = Color3.fromRGB(255, 255, 51)
                                       hl.OutlineColor = Color3.fromRGB(255, 255, 255)
                                       hl.FillTransparency = 0.5
                                       hl.OutlineTransparency = 0
                                   elseif v:FindFirstChild("gen_esp") and v.Name == "Generator" then
                                       if v:FindFirstChild("Progress") then
                                           if v.Progress.Value >= 100 then
                                               v.gen_esp.FillColor = Color3.fromRGB(0, 255, 0)
                                           else
                                               v.gen_esp.FillColor = Color3.fromRGB(255, 255, 51)
                                           end
                                       end
                                   end
                               end
                           end
                       end
                   end)
               else
                   pcall(function()
                       if workspace:FindFirstChild("Map") then
                           local gameMap = workspace.Map
                           if gameMap:FindFirstChild("Ingame") and gameMap.Ingame:FindFirstChild("Map") then
                               for _, v in pairs(gameMap.Ingame.Map:GetChildren()) do
                                   if v.Name == "Generator" and v:FindFirstChild("gen_esp") then
                                       v.gen_esp:Destroy()
                                   end
                               end
                           end
                       end
                   end)
                   break
               end
           end
       end)
   end
})

-- =============================
-- Generators Nametags
-- =============================
MainTab:CreateToggle({
   Name = "Generators Nametags",
   CurrentValue = false,
   Flag = "GeneratorsNametags",
   Callback = function(bool)
       _G.generatorstag = bool
       task.spawn(function()
           while task.wait() do
               if _G.generatorstag then
                   pcall(function()
                       if workspace:FindFirstChild("Map") then
                           local gameMap = workspace.Map
                           if gameMap:FindFirstChild("Ingame") and gameMap.Ingame:FindFirstChild("Map") then
                               for _, v in pairs(gameMap.Ingame.Map:GetChildren()) do
                                   if v.Name == "Generator" and not v:FindFirstChild("nametag") then
                                       local bb = Instance.new("BillboardGui", v)
                                       bb.Size = UDim2.new(4, 0, 1, 0)
                                       bb.AlwaysOnTop = true
                                       bb.Name = "nametag"

                                       local text = Instance.new("TextLabel", bb)
                                       text.TextStrokeTransparency = 0
                                       text.Text = "Generator (" .. (v:FindFirstChild("Progress") and v.Progress.Value or 0) .. "%)"
                                       text.TextSize = 15
                                       text.BackgroundTransparency = 1
                                       text.Size = UDim2.new(1, 0, 1, 0)
                                       text.TextColor3 = Color3.fromRGB(255, 255, 255)
                                   elseif v:FindFirstChild("nametag") and v.Name == "Generator" then
                                       if v:FindFirstChild("Progress") then
                                           v.nametag.TextLabel.Text = "Generator (" .. v.Progress.Value .. "%)"
                                       end
                                   end
                               end
                           end
                       end
                   end)
               else
                   pcall(function()
                       if workspace:FindFirstChild("Map") then
                           local gameMap = workspace.Map
                           if gameMap:FindFirstChild("Ingame") and gameMap.Ingame:FindFirstChild("Map") then
                               for _, v in pairs(gameMap.Ingame.Map:GetChildren()) do
                                   if v.Name == "Generator" and v:FindFirstChild("nametag") then
                                       v.nametag:Destroy()
                                   end
                               end
                           end
                       end
                   end)
                   break
               end
           end
       end)
   end
})

-- =============================
-- Auto Complete Generator
-- =============================
MainTab:CreateToggle({
   Name = "Auto Complete Generator",
   CurrentValue = false,
   Flag = "AutoCompleteGenerator",
   Callback = function(bool)
       _G.instantGenerator = bool
       if bool then
           task.spawn(function()
               while _G.instantGenerator do
                   local map = workspace:FindFirstChild("Map") and workspace.Map:FindFirstChild("Ingame") and workspace.Map.Ingame:FindFirstChild("Map")
                   if map then
                       for _, gen in pairs(map:GetChildren()) do
                           if gen:IsA("Model") and gen.Name == "Generator" then
                               local re = gen:FindFirstChild("Remotes") and gen.Remotes:FindFirstChild("RE")
                               if re then
                                   re:FireServer()
                               end
                           end
                       end
                   end
                   task.wait(2.5)
               end
           end)
       end
   end
})

-- =============================
-- Items ESP
-- =============================
MainTab:CreateToggle({
    Name = "Items ESP",
    CurrentValue = false,
    Flag = "ItemsESP",
    Callback = function(bool)
        _G.items = bool
        task.spawn(function()
            while task.wait() do
                if _G.items == true then
                    pcall(function()
                        local gameMap = workspace:FindFirstChild("Map")
                        if workspace:FindFirstChild("Map") and gameMap:FindFirstChild("Ingame") and gameMap.Ingame:FindFirstChild("Map") then
                            for _, v in pairs(gameMap.Ingame:GetChildren()) do
                                if v:IsA("Tool") and not v:FindFirstChild("tool_esp") then
                                    local hl = Instance.new("Highlight", v)
                                    hl.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
                                    hl.Name = "tool_esp"
                                    hl.FillColor = Color3.fromRGB(0, 255, 255)
                                    hl.OutlineColor = Color3.fromRGB(255, 255, 255)
                                    hl.FillTransparency = 0.3
                                    hl.OutlineTransparency = 0
                                elseif v:IsA("Tool") and v:FindFirstChild("tool_esp") then
                                    v.tool_esp.FillColor = Color3.fromRGB(0, 255, 255)
                                    v.tool_esp.OutlineTransparency = 0
                                    v.tool_esp.FillTransparency = 0.3
                                    v.tool_esp.OutlineColor = Color3.fromRGB(255, 255, 255)
                                end
                            end
                            for _, v in pairs(gameMap.Ingame.Map:GetChildren()) do
                                if v:IsA("Tool") and not v:FindFirstChild("tool_esp") then
                                    local hl = Instance.new("Highlight", v)
                                    hl.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
                                    hl.Name = "tool_esp"
                                    hl.FillColor = Color3.fromRGB(0, 255, 255)
                                    hl.OutlineColor = Color3.fromRGB(255, 255, 255)
                                    hl.FillTransparency = 0.3
                                    hl.OutlineTransparency = 0
                                elseif v:IsA("Tool") and v:FindFirstChild("tool_esp") then
                                    v.tool_esp.FillColor = Color3.fromRGB(0, 255, 255)
                                    v.tool_esp.OutlineTransparency = 0
                                    v.tool_esp.FillTransparency = 0.3
                                    v.tool_esp.OutlineColor = Color3.fromRGB(255, 255, 255)
                                end
                            end
                        end
                    end)
                else
                    pcall(function()
                        local gameMap = workspace:FindFirstChild("Map")
                        if workspace:FindFirstChild("Map") and gameMap:FindFirstChild("Ingame") and gameMap.Ingame:FindFirstChild("Map") then
                            for _, v in pairs(gameMap.Ingame:GetChildren()) do
                                if v:IsA("Tool") and v:FindFirstChild("tool_esp") then
                                    v.tool_esp:Destroy()
                                end
                            end
                            for _, v in pairs(gameMap.Ingame.Map:GetChildren()) do
                                if v:IsA("Tool") and v:FindFirstChild("tool_esp") then
                                    v.tool_esp:Destroy()
                                end
                            end
                        end
                    end)
                    break
                end
            end
        end)
    end
})

-- =============================
-- Reach Expander
-- =============================
local function getHitboxesFromPlayer()
    local hitboxes = workspace:FindFirstChild("Hitboxes")
    if hitboxes then
        for _, v in pairs(hitboxes:GetChildren()) do
            if string.find(v.Name, game.Players.LocalPlayer.Name) then
                return true
            end
        end
    end
    return false
end

MainTab:CreateToggle({
   Name = "Reach Expander",
   CurrentValue = false,
   Flag = "HitboxExpander",
   Callback = function(bool)
       _G.hitboxExpander = bool
       if bool then
           Rayfield:Notify({Title = "Reach Expander", Content = "Reach Expander ATIVADO!", Duration = 3, Image = 4483362458})
       else
           Rayfield:Notify({Title = "Reach Expander", Content = "Reach Expander DESATIVADO!", Duration = 2, Image = 4483362458})
       end
   end
})

-- Sistema do Reach Expander executando em loop separado
task.spawn(function()
    while true do
        if _G.hitboxExpander and getHitboxesFromPlayer() then
            local localPlayer = game.Players.LocalPlayer
            local hrp = localPlayer.Character and localPlayer.Character:FindFirstChild("HumanoidRootPart")
            if hrp then
                local currentVelocity = hrp.Velocity
                hrp.AssemblyLinearVelocity = hrp.CFrame.LookVector * 250
                game:GetService("RunService").RenderStepped:Wait()
                hrp.Velocity = currentVelocity 
            end
        end
        task.wait()
    end
end)

-- =============================
-- Anti Death
-- =============================
MainTab:CreateToggle({
    Name = "Anti Death",
    CurrentValue = false,
    Flag = "AntiDeathToggle",
    Callback = function(val)
        _G.antiDeath = val
        if val then
            task.spawn(function()
                while _G.antiDeath do
                    local player = game.Players.LocalPlayer
                    local character = player.Character
                    if character and character:FindFirstChild("HumanoidRootPart") then
                        for _, killer in pairs(workspace:FindFirstChild("Killers") and workspace.Killers:GetChildren() or {}) do
                            if killer:FindFirstChild("HumanoidRootPart") then
                                local distance = (killer.HumanoidRootPart.Position - character.HumanoidRootPart.Position).Magnitude
                                if distance <= 18 then
                                    character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(-3560,12,255))
                                end
                            end
                        end
                    end
                    task.wait(3)
                end
            end)
        end
    end
})

-- =============================
-- Allow Jump
-- =============================
MainTab:CreateToggle({
    Name = "Allow Jump",
    CurrentValue = false,
    Flag = "AllowJumpToggle",
    Callback = function(val)
        _G.allowJump = val
        if val then
            task.spawn(function()
                while _G.allowJump do
                    local player = game.Players.LocalPlayer
                    local character = player.Character
                    if character and character:FindFirstChild("Humanoid") then
                        if character.Humanoid.JumpPower == 0 then
                            character.Humanoid.JumpPower = 50
                        end
                    end
                    task.wait(3)
                end
            end)
        end
    end
})

-- =============================
-- Infinite Stamina
-- =============================
local infiniteStaminaToggle = false
local oldStamina = nil

MainTab:CreateToggle({
   Name = "Infinite Stamina",
   CurrentValue = false,
   Flag = "InfiniteStaminaToggle",
   Callback = function(Value)
       infiniteStaminaToggle = Value
       local success, sprintModule = pcall(function()
           return require(game:GetService("ReplicatedStorage").Systems.Character.Game.Sprinting)
       end)

       if success and sprintModule then
           if Value then
               oldStamina = sprintModule.Stamina
               task.spawn(function()
                   while infiniteStaminaToggle do
                       sprintModule.Stamina = sprintModule.MaxStamina
                       if sprintModule.__staminaChangedEvent then
                           sprintModule.__staminaChangedEvent:Fire()
                       end
                       task.wait()
                   end
               end)
               Rayfield:Notify({Title = "Infinite Stamina", Content = "Stamina infinita ATIVADA!", Duration = 3, Image = 4483362458})
           else
               if oldStamina then
                   sprintModule.Stamina = oldStamina
                   if sprintModule.__staminaChangedEvent then
                       sprintModule.__staminaChangedEvent:Fire()
                   end
               end
               Rayfield:Notify({Title = "Infinite Stamina", Content = "Stamina infinita DESATIVADA!", Duration = 2, Image = 4483362458})
           end
       else
           Rayfield:Notify({Title = "Erro", Content = "Não foi possível acessar o módulo de Sprint.", Duration = 3, Image = 4483362458})
       end
   end
})

-- =============================
-- Invisibility
-- =============================
local loopRunning, loopThread, currentAnim, lastAnim
local anim = Instance.new("Animation")
anim.AnimationId = "rbxassetid://75804462760596"

local function enableNoclip()
    local localPlayer = game.Players.LocalPlayer
    if localPlayer.Character then
        for _, v in pairs(localPlayer.Character:GetChildren()) do
            if v:IsA("BasePart") then
                v.CanCollide = false
            end
        end
    end
end

MainTab:CreateToggle({
    Name = "Invisible",
    CurrentValue = false,
    Flag = "InvisibilityToggle",
    Callback = function(Value)
        local localPlayer = game.Players.LocalPlayer
        
        if game.PlaceId ~= 18687417158 then
            if Value then
                Rayfield:Notify({Title = "Aviso", Content = "Use apenas no Forsaken real! Invisibilidade não funciona em outros jogos.", Duration = 8, Image = 4483362458})
                return
            end
        end
        
        if Value then
            Rayfield:Notify({Title = "Aviso", Content = "Você ainda pode ser visto com certas habilidades ou configurações de hitbox!", Duration = 6, Image = 4483362458})
            loopRunning = true

            loopThread = task.spawn(function()
                while loopRunning do
                    local hum = localPlayer.Character and localPlayer.Character:FindFirstChild("HumanoidRootPart") and localPlayer.Character:FindFirstChild("Humanoid")
                    if hum then
                        enableNoclip()
                    end

                    if hum then
                        local loadedAnim = hum:LoadAnimation(anim)
                        currentAnim = loadedAnim
                        loadedAnim.Looped = false
                        loadedAnim:Play()
                        loadedAnim:AdjustSpeed(0)
                        task.wait(0.1)
                        if lastAnim then
                            lastAnim:Stop()
                            lastAnim:Destroy()
                        end
                        lastAnim = currentAnim
                    else
                        currentAnim = nil
                    end
                    task.wait()
                end
            end)
        else
            loopRunning = false

            if loopThread then
                loopRunning = false
                task.cancel(loopThread)
            end

            if currentAnim then
                currentAnim:Stop()
                currentAnim = nil
            end

            local Humanoid = localPlayer.Character and (localPlayer.Character:FindFirstChildOfClass("Humanoid") or localPlayer.Character:FindFirstChildOfClass("AnimationController"))
            if Humanoid then
                for _, v in pairs(Humanoid:GetPlayingAnimationTracks()) do
                    v:AdjustSpeed(100000)
                end
                for _, v in pairs(localPlayer.Character:GetChildren()) do
                    if v:IsA("BasePart") then
                        v.CanCollide = true
                    end
                end
            end

            local animateScript = localPlayer.Character and localPlayer.Character:FindFirstChild("Animate")
            if animateScript then
                animateScript.Disabled = true
                animateScript.Disabled = false
            end
            
            Rayfield:Notify({Title = "Invisible", Content = "Invisibilidade DESATIVADA!", Duration = 2, Image = 4483362458})
        end
    end
})

-- =============================
-- Guest 666 Animation
-- =============================
AnimationTab:CreateButton({
   Name = "Guest 666 Animation",
   Callback = function()
       loadstring(game:HttpGet("https://raw.githubusercontent.com/XScommunity/XXMZ/refs/heads/main/anim"))()
   end,
})

-- =============================
-- Mafious Dance
-- =============================
AnimationTab:CreateButton({
   Name = "Mafious Dance",
   Callback = function()
       local localPlayer = game.Players.LocalPlayer
       local character = localPlayer.Character
       
       if character and character:FindFirstChild("Humanoid") then
           local humanoid = character.Humanoid
           
           -- Para animações anteriores
           for _, track in pairs(humanoid:GetPlayingAnimationTracks()) do
               track:Stop()
           end
           
           -- Cria e carrega a animação
           local anim = Instance.new("Animation")
           anim.AnimationId = "rbxassetid://132946177664650"
           
           local animTrack = humanoid:LoadAnimation(anim)
           animTrack.Looped = true
           animTrack:Play()
           
           Rayfield:Notify({
               Title = "Mafious Dance", 
               Content = "Dança iniciada! Use novamente para parar.", 
               Duration = 3, 
               Image = 4483362458
           })
           
           -- Guarda a referência da animação para poder parar depois
           _G.mafiousDanceTrack = animTrack
       else
           Rayfield:Notify({
               Title = "Erro", 
               Content = "Personagem não encontrado!", 
               Duration = 3, 
               Image = 4483362458
           })
       end
   end,
})

-- =============================
-- Stop All Animations
-- =============================
AnimationTab:CreateButton({
   Name = "Stop All Animations",
   Callback = function()
       local localPlayer = game.Players.LocalPlayer
       local character = localPlayer.Character
       
       if character and character:FindFirstChild("Humanoid") then
           local humanoid = character.Humanoid
           
           -- Para todas as animações
           for _, track in pairs(humanoid:GetPlayingAnimationTracks()) do
               track:Stop()
           end
           
           -- Limpa referências globais
           _G.mafiousDanceTrack = nil
           
           -- Restaura animações padrão se estavam substituídas
           if _G.noliAnimationEnabled then
               _G.noliAnimationEnabled = false
           end
           
           Rayfield:Notify({
               Title = "Stop Animations", 
               Content = "Todas as animações foram paradas!", 
               Duration = 2, 
               Image = 4483362458
           })
       else
           Rayfield:Notify({
               Title = "Erro", 
               Content = "Personagem não encontrado!", 
               Duration = 3, 
               Image = 4483362458
           })
       end
   end,
})

AnimationTab:CreateButton({
   Name = "Noli Animation",
   Callback = function()
       loadstring(game:HttpGet("https://raw.githubusercontent.com/XScommunity/MAXZZ/refs/heads/main/noli"))()
   end,
})
