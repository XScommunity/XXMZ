-- Atualmente Open-Source!
-- Permitido: Adotar algumas funções em seu script , verificar se é seguro
-- Não permitido: Copiar o script totalmente , Recriar com KeySystem
-- Aproveite :)

local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "XXMZ HUB",
   LoadingTitle = "Carregando Script...",
   LoadingSubtitle = "XXMZ [FORSAKEN]",
   ConfigurationSaving = {
      Enabled = true,
      FolderName = "XXMZCONFIG",
      FileName = "Config"
   },
   Discord = {
      Enabled = false,
      Invite = "noinvitelink",
      RememberJoins = true
   },
   KeySystem = false
})

local MainTab = Window:CreateTab("Principal", 4483362458)

-- Guest 666 Animation
MainTab:CreateButton({
   Name = "Guest 666 Animation",
   Callback = function()
       loadstring(game:HttpGet("https://raw.githubusercontent.com/XScommunity/XXMZ/refs/heads/main/anim"))()
   end,
})

-- =============================
-- Bring Items
-- =============================
local bringItemsToggle = false
local bringItemsConnection = nil

local function startBringItems()
    local RunService = game:GetService("RunService")
    bringItemsConnection = RunService.Heartbeat:Connect(function()
        if bringItemsToggle then
            local player = game.Players.LocalPlayer
            local character = player.Character
            if character and character:FindFirstChild("HumanoidRootPart") then
                character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(-3549, 18, 254))
            end
            wait(0.05)
        end
    end)
end

local function stopBringItems()
    if bringItemsConnection then
        bringItemsConnection:Disconnect()
        bringItemsConnection = nil
    end
end

MainTab:CreateToggle({
   Name = "Bring Items",
   CurrentValue = false,
   Flag = "BringItemsToggle",
   Callback = function(Value)
       bringItemsToggle = Value
       if Value then
           startBringItems()
           Rayfield:Notify({Title = "Bring Items", Content = "Teleporte contínuo ATIVADO! (0.05s)", Duration = 3, Image = 4483362458})
       else
           stopBringItems()
           Rayfield:Notify({Title = "Bring Items", Content = "Teleporte contínuo DESATIVADO!", Duration = 2, Image = 4483362458})
       end
   end,
})

-- =============================
-- Kill Carl
-- =============================
local killCarlToggle = false
local killCarlConnection = nil

local function startKillCarl()
    local RunService = game:GetService("RunService")
    killCarlConnection = RunService.Heartbeat:Connect(function()
        if killCarlToggle then
            local player = game.Players.LocalPlayer
            local character = player.Character
            if character and character:FindFirstChild("HumanoidRootPart") then
                character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(-3610, 12, 255))
            end
            wait(0.05)
        end
    end)
end

local function stopKillCarl()
    if killCarlConnection then
        killCarlConnection:Disconnect()
        killCarlConnection = nil
    end
end

MainTab:CreateToggle({
   Name = "Kill Carl",
   CurrentValue = false,
   Flag = "KillCarlToggle",
   Callback = function(Value)
       killCarlToggle = Value
       if Value then
           startKillCarl()
           Rayfield:Notify({Title = "Kill Carl", Content = "Teleporte contínuo ATIVADO! (0.05s)", Duration = 3, Image = 4483362458})
       else
           stopKillCarl()
           Rayfield:Notify({Title = "Kill Carl", Content = "Teleporte contínuo DESATIVADO!", Duration = 2, Image = 4483362458})
       end
   end,
})

-- =============================
-- Kill Rager
-- =============================
local killRagerToggle = false
local killRagerConnection = nil

local function startKillRager()
    local RunService = game:GetService("RunService")
    killRagerConnection = RunService.Heartbeat:Connect(function()
        if killRagerToggle then
            local player = game.Players.LocalPlayer
            local character = player.Character
            if character and character:FindFirstChild("HumanoidRootPart") then
                character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(-3646, 12, 255))
            end
            wait(0.05)
        end
    end)
end

local function stopKillRager()
    if killRagerConnection then
        killRagerConnection:Disconnect()
        killRagerConnection = nil
    end
end

MainTab:CreateToggle({
   Name = "Kill Rager",
   CurrentValue = false,
   Flag = "KillRagerToggle",
   Callback = function(Value)
       killRagerToggle = Value
       if Value then
           startKillRager()
           Rayfield:Notify({Title = "Kill Rager", Content = "Teleporte contínuo ATIVADO! (0.05s)", Duration = 3, Image = 4483362458})
       else
           stopKillRager()
           Rayfield:Notify({Title = "Kill Rager", Content = "Teleporte contínuo DESATIVADO!", Duration = 2, Image = 4483362458})
       end
   end,
})

-- =============================
-- Generators ESP
-- =============================
MainTab:CreateToggle({
   Name = "Generators ESP",
   CurrentValue = false,
   Flag = "GeneratorsESP",
   Callback = function(bool)
       _G.generators = bool
       task.spawn(function()
           while task.wait() do
               if _G.generators then
                   pcall(function()
                       if workspace:FindFirstChild("Map") then
                           local gameMap = workspace.Map
                           if gameMap:FindFirstChild("Ingame") and gameMap.Ingame:FindFirstChild("Map") then
                               for _, v in pairs(gameMap.Ingame.Map:GetChildren()) do
                                   if v.Name == "Generator" and not v:FindFirstChild("gen_esp") then
                                       local hl = Instance.new("Highlight", v)
                                       hl.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
                                       hl.Name = "gen_esp"
                                       hl.FillColor = Color3.fromRGB(255, 255, 51)
                                       hl.OutlineColor = Color3.fromRGB(255, 255, 255)
                                       hl.FillTransparency = 0.5
                                       hl.OutlineTransparency = 0
                                   elseif v:FindFirstChild("gen_esp") and v.Name == "Generator" then
                                       if v:FindFirstChild("Progress") then
                                           if v.Progress.Value >= 100 then
                                               v.gen_esp.FillColor = Color3.fromRGB(0, 255, 0)
                                           else
                                               v.gen_esp.FillColor = Color3.fromRGB(255, 255, 51)
                                           end
                                       end
                                   end
                               end
                           end
                       end
                   end)
               else
                   pcall(function()
                       if workspace:FindFirstChild("Map") then
                           local gameMap = workspace.Map
                           if gameMap:FindFirstChild("Ingame") and gameMap.Ingame:FindFirstChild("Map") then
                               for _, v in pairs(gameMap.Ingame.Map:GetChildren()) do
                                   if v.Name == "Generator" and v:FindFirstChild("gen_esp") then
                                       v.gen_esp:Destroy()
                                   end
                               end
                           end
                       end
                   end)
                   break
               end
           end
       end)
   end
})

-- =============================
-- Generators Nametags
-- =============================
MainTab:CreateToggle({
   Name = "Generators Nametags",
   CurrentValue = false,
   Flag = "GeneratorsNametags",
   Callback = function(bool)
       _G.generatorstag = bool
       task.spawn(function()
           while task.wait() do
               if _G.generatorstag then
                   pcall(function()
                       if workspace:FindFirstChild("Map") then
                           local gameMap = workspace.Map
                           if gameMap:FindFirstChild("Ingame") and gameMap.Ingame:FindFirstChild("Map") then
                               for _, v in pairs(gameMap.Ingame.Map:GetChildren()) do
                                   if v.Name == "Generator" and not v:FindFirstChild("nametag") then
                                       local bb = Instance.new("BillboardGui", v)
                                       bb.Size = UDim2.new(4, 0, 1, 0)
                                       bb.AlwaysOnTop = true
                                       bb.Name = "nametag"

                                       local text = Instance.new("TextLabel", bb)
                                       text.TextStrokeTransparency = 0
                                       text.Text = "Generator (" .. (v:FindFirstChild("Progress") and v.Progress.Value or 0) .. "%)"
                                       text.TextSize = 15
                                       text.BackgroundTransparency = 1
                                       text.Size = UDim2.new(1, 0, 1, 0)
                                       text.TextColor3 = Color3.fromRGB(255, 255, 255)
                                   elseif v:FindFirstChild("nametag") and v.Name == "Generator" then
                                       if v:FindFirstChild("Progress") then
                                           v.nametag.TextLabel.Text = "Generator (" .. v.Progress.Value .. "%)"
                                       end
                                   end
                               end
                           end
                       end
                   end)
               else
                   pcall(function()
                       if workspace:FindFirstChild("Map") then
                           local gameMap = workspace.Map
                           if gameMap:FindFirstChild("Ingame") and gameMap.Ingame:FindFirstChild("Map") then
                               for _, v in pairs(gameMap.Ingame.Map:GetChildren()) do
                                   if v.Name == "Generator" and v:FindFirstChild("nametag") then
                                       v.nametag:Destroy()
                                   end
                               end
                           end
                       end
                   end)
                   break
               end
           end
       end)
   end
})

-- =============================
-- Auto Complete Generator
-- =============================
MainTab:CreateToggle({
   Name = "Auto Complete Generator",
   CurrentValue = false,
   Flag = "AutoCompleteGenerator",
   Callback = function(bool)
       _G.instantGenerator = bool
       if bool then
           task.spawn(function()
               while _G.instantGenerator do
                   local map = workspace:FindFirstChild("Map") and workspace.Map:FindFirstChild("Ingame") and workspace.Map.Ingame:FindFirstChild("Map")
                   if map then
                       for _, gen in pairs(map:GetChildren()) do
                           if gen:IsA("Model") and gen.Name == "Generator" then
                               local re = gen:FindFirstChild("Remotes") and gen.Remotes:FindFirstChild("RE")
                               if re then
                                   re:FireServer()
                               end
                           end
                       end
                   end
                   task.wait(2.5)
               end
           end)
       end
   end
})

-- =============================
-- Hitbox Expander
-- =============================
local function getHitboxesFromPlayer()
    local hitboxes = workspace:FindFirstChild("Hitboxes")
    if hitboxes then
        for _, v in pairs(hitboxes:GetChildren()) do
            if string.find(v.Name, game.Players.LocalPlayer.Name) then
                return true
            end
        end
    end
    return false
end

MainTab:CreateToggle({
   Name = "Hitbox Expander",
   CurrentValue = false,
   Flag = "HitboxExpander",
   Callback = function(bool)
       _G.hitboxExpander = bool
       if bool then
           Rayfield:Notify({Title = "Hitbox Expander", Content = "Hitbox Expander ATIVADO!", Duration = 3, Image = 4483362458})
           task.spawn(function()
               while _G.hitboxExpander do
                   if getHitboxesFromPlayer() then
                       local player = game.Players.LocalPlayer
                       local character = player.Character
                       if character and character:FindFirstChild("HumanoidRootPart") then
                           local hrp = character.HumanoidRootPart
                           hrp.Size = Vector3.new(2.5, 6, 2.5) -- tamanho customizado
                       end
                   end
                   task.wait(0.1)
               end
           end)
       else
           Rayfield:Notify({Title = "Hitbox Expander", Content = "Hitbox Expander DESATIVADO!", Duration = 2, Image = 4483362458})
       end
   end
})

-- =============================
-- Anti Death
-- =============================
MainTab:CreateToggle({
    Name = "Anti Death",
    CurrentValue = false,
    Flag = "AntiDeathToggle",
    Callback = function(val)
        _G.antiDeath = val
        if val then
            task.spawn(function()
                while _G.antiDeath do
                    local player = game.Players.LocalPlayer
                    local character = player.Character
                    if character and character:FindFirstChild("HumanoidRootPart") then
                        for _, killer in pairs(workspace:FindFirstChild("Players") and workspace.Players:FindFirstChild("Killers") and workspace.Players.Killers:GetChildren() or {}) do
                            if killer:FindFirstChild("HumanoidRootPart") then
                                local distance = (killer.HumanoidRootPart.Position - character.HumanoidRootPart.Position).Magnitude
                                if distance <= 8 then
                                    character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(-3560, 12, 255))
                                end
                            end
                        end
                    end
                    task.wait(0.1)
                end
            end)
        end
    end
})

-- =============================
-- Allow Jump
-- =============================
MainTab:CreateToggle({
    Name = "Allow Jump",
    CurrentValue = false,
    Flag = "AllowJumpToggle",
    Callback = function(val)
        _G.allowJump = val
        if val then
            task.spawn(function()
                while _G.allowJump do
                    local player = game.Players.LocalPlayer
                    local character = player.Character
                    if character and character:FindFirstChild("Humanoid") then
                        if character.Humanoid.JumpPower == 0 then
                            character.Humanoid.JumpPower = 50 -- valor padrão
                        end
                    end
                    task.wait(3) -- verificação a cada 3 segundos
                end
            end)
        end
    end
})

-- =============================
-- Infinite Stamina
-- =============================
local infiniteStaminaToggle = false
local oldStamina = nil

MainTab:CreateToggle({
   Name = "Infinite Stamina",
   CurrentValue = false,
   Flag = "InfiniteStaminaToggle",
   Callback = function(Value)
       infiniteStaminaToggle = Value
       local success, sprintModule = pcall(function()
           return require(game:GetService("ReplicatedStorage").Systems.Character.Game.Sprinting)
       end)

       if success and sprintModule then
           if Value then
               oldStamina = sprintModule.Stamina
               task.spawn(function()
                   while infiniteStaminaToggle do
                       sprintModule.Stamina = sprintModule.MaxStamina
                       if sprintModule.__staminaChangedEvent then
                           sprintModule.__staminaChangedEvent:Fire()
                       end
                       task.wait()
                   end
               end)
               Rayfield:Notify({Title = "Infinite Stamina", Content = "Stamina infinita ATIVADA!", Duration = 3, Image = 4483362458})
           else
               if oldStamina then
                   sprintModule.Stamina = oldStamina
                   if sprintModule.__staminaChangedEvent then
                       sprintModule.__staminaChangedEvent:Fire()
                   end
               end
               Rayfield:Notify({Title = "Infinite Stamina", Content = "Stamina infinita DESATIVADA!", Duration = 2, Image = 4483362458})
           end
       else
           Rayfield:Notify({Title = "Erro", Content = "Não foi possível acessar o módulo de Sprint.", Duration = 3, Image = 4483362458})
       end
   end
})

-- =============================
-- Informações e UI
-- =============================
MainTab:CreateSection({Name = "Informações"})

MainTab:CreateParagraph({
    Title = "Posições",
    Content = "Bring Items: X: -3549, Y: 18, Z: 254\nKill Carl: X: -3610, Y: 12, Z: 255\nKill Rager: X: -3646, Y: 12, Z: 255"
})

MainTab:CreateButton({
   Name = "Fechar UI",
   Callback = function()
       Rayfield:Destroy()
   end,
})

Rayfield:Notify({Title = "Script Carregado", Content = "UI carregada com sucesso!", Duration = 5, Image = 4483362458})
